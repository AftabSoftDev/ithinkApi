<?php

namespace App\Services;

use App\Repositories\ProductRepoInterface;
use App\BO\Product;

class ProductService
{
    protected $productRepo;

    public function __construct(ProductRepoInterface $productRepo)
    {
        $this->productRepo = $productRepo;
    }

    public function getAllProducts()
    {
        $data= $this->productRepo->getAllProduct();
        return new Product(
            $data->id,
            $data->name,
            $data->description,
            $data->sku,
            $data->price,
            $data->category_id,
            $data->created_at,
            $data->updated_at
        );
    }

    public function getProductById($id)
    {
        return $this->productRepo->getByProductId($id);
    }

    public function createProduct($data)
    {

        
        $data= $this->productRepo->createProduct($data);
        return new Product(
            $data->id,
            $data->name,
            $data->description,
            $data->sku,
            $data->price,
            $data->category_id,
            $data->created_at,
            $data->updated_at
        );
    }

    public function updateProduct($id, $data)
    {
        return $this->productRepo->updateProduct($id, $data);
    }

    public function deleteProduct($id)
    {
        return $this->productRepo->deleteProduct($id);
    }
}